name: "ðŸ”¥ Profiling"

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  profiling:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        with_rust: [off, on]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Profile stage timings
        run: |
          python scripts/profile_stages.py --with-rust ${{ matrix.with_rust }}

      - name: Generate flamegraph
        run: |
          bash scripts/profile_flame_pyspy.sh ${{ matrix.with_rust }}

      - name: Upload profiling artifacts
        uses: actions/upload-artifact@v4
        with:
          name: profiling-${{ matrix.with_rust }}
          path: |
            results/stage_times_${{ matrix.with_rust }}.json
            results/stage_times_${{ matrix.with_rust }}.csv
            results/flame_${{ matrix.with_rust }}.svg
          if-no-files-found: ignore

      - name: Comment summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          WITH_RUST: ${{ matrix.with_rust }}
        with:
          script: |
            const fs = require('fs');
            const withRust = process.env.WITH_RUST;
            const file = `results/stage_times_${withRust}.json`;
            if (!fs.existsSync(file)) {
              return;
            }
            const data = JSON.parse(fs.readFileSync(file, 'utf8'));
            const stats = [];
            for (const [scenario, stages] of Object.entries(data)) {
              for (const [stage, s] of Object.entries(stages)) {
                stats.push({name: `${scenario}:${stage}`, median: s.median});
              }
            }
            stats.sort((a,b)=>b.median-a.median);
            const top = stats.slice(0,5).map(s=>`- ${s.name}: ${s.median.toFixed(6)}s`).join('\n');
            const runUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const body = `### Profiling (${withRust})\n${top}\n[Flamegraph & artifacts](${runUrl})`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
