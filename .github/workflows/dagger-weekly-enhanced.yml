name: 🗓️ Enhanced Weekly Benchmarks (Dagger)

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2:00 AM UTC (matches legacy)
  workflow_dispatch:
    inputs:
      full_analysis:
        description: 'Run full competitive analysis'
        required: false
        default: true
        type: boolean
      test_all_configs:
        description: 'Test all DataSON configurations'
        required: false
        default: true
        type: boolean
      parallel_execution:
        description: 'Enable parallel stage execution'
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

env:
  DATASON_VERSION: "latest"
  PYTHON_VERSION: "3.12"
  PYTHONUNBUFFERED: 1
  CI: true
  GITHUB_ACTIONS: true

jobs:
  enhanced-weekly-benchmarks:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # Extended timeout for comprehensive weekly analysis
    name: 🎯 Enhanced weekly comprehensive benchmarks
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
        
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: 💾 Cache Dagger and comprehensive dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.local/bin/dagger
          key: dagger-weekly-deps-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt', 'requirements-dagger.txt') }}-${{ github.run_id }}
          restore-keys: |
            dagger-weekly-deps-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements.txt', 'requirements-dagger.txt') }}-
            dagger-weekly-deps-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-
          
      - name: 📦 Install Dagger and comprehensive dependencies
        run: |
          # Install Dagger CLI
          curl -fsSL https://dl.dagger.io/dagger/install.sh | BIN_DIR=$HOME/.local/bin sh
          export PATH="$HOME/.local/bin:$PATH"
          
          # Install comprehensive Python dependencies for weekly analysis
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install dagger-io
          
          # Additional dependencies for comprehensive weekly analysis
          pip install faker numpy pandas cbor2 pickle5 dill cloudpickle
          
          echo "✅ Comprehensive dependencies installed for weekly analysis"
        
      - name: 🎯 Run Enhanced Weekly Benchmarks with Dagger
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          
          echo "🚀 Starting enhanced weekly comprehensive benchmarks..."
          echo "📊 Configuration: full_analysis=${{ github.event.inputs.full_analysis || 'true' }}, test_all_configs=${{ github.event.inputs.test_all_configs || 'true' }}, parallel=${{ github.event.inputs.parallel_execution || 'true' }}"
          
          dagger call weekly-benchmarks-full \
            --source=. \
            --full-analysis=${{ github.event.inputs.full_analysis || 'true' }} \
            --test-all-configs=${{ github.event.inputs.test_all_configs || 'true' }} \
            --parallel-execution=${{ github.event.inputs.parallel_execution || 'true' }}
        env:
          DAGGER_CLOUD_TOKEN: ${{ secrets.DAGGER_CLOUD_TOKEN }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          DATASON_VERSION: ${{ env.DATASON_VERSION }}
          
      - name: 📊 Generate comprehensive weekly summary
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          
          echo "📈 Generating comprehensive weekly analysis summary..."
          
          # Create enhanced weekly summary with metadata
          cat > weekly_summary.md << 'EOF'
          # Weekly Comprehensive Benchmark Summary
          
          **Date:** $(date -u '+%Y-%m-%d %H:%M UTC')  
          **Run ID:** ${{ github.run_id }}
          **SHA:** ${{ github.sha }}
          **Engine:** Enhanced Dagger Pipeline v1
          
          ## Analysis Configuration
          - **Full Analysis:** ${{ github.event.inputs.full_analysis || 'true' }}
          - **All Configurations:** ${{ github.event.inputs.test_all_configs || 'true' }}
          - **Parallel Execution:** ${{ github.event.inputs.parallel_execution || 'true' }}
          
          ## Enhanced Features Delivered
          - ✅ Fresh synthetic test data generation
          - ✅ Parallel stage execution for speed
          - ✅ Comprehensive competitive analysis
          - ✅ Multi-configuration DataSON testing  
          - ✅ Version evolution tracking
          - ✅ Phase 4 enhanced reports with visualizations
          - ✅ Automated result consolidation
          - ✅ GitHub Pages integration
          
          ## Legacy Workflow Parity
          This enhanced weekly analysis replaces the 498-line legacy YAML workflow
          with type-safe Python code, providing identical functionality with
          improved reliability, testability, and maintainability.
          
          **Results:** Available at https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
          EOF
          
          echo "✅ Weekly summary generated"
          
      - name: 🌐 Commit enhanced weekly results to repository  
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add comprehensive weekly results
          find data/results -name "weekly_*.json" -exec git add -f {} \; 2>/dev/null || echo "ℹ️ No weekly JSON results to commit"
          find data/results -name "latest_*.json" -exec git add -f {} \; 2>/dev/null || echo "ℹ️ No latest results to commit"
          find data/results -name "ci_*_*.json" -exec git add -f {} \; 2>/dev/null || echo "ℹ️ No CI results to commit"
          find docs/results -name "weekly_*.html" -exec git add -f {} \; 2>/dev/null || echo "ℹ️ No weekly HTML results to commit"
          find docs/results -name "phase4_comprehensive_*.html" -exec git add -f {} \; 2>/dev/null || echo "ℹ️ No Phase 4 reports to commit"
          git add docs/results/index.html 2>/dev/null || echo "ℹ️ No index.html to commit"
          git add weekly_summary.md 2>/dev/null || echo "ℹ️ No weekly summary to commit"
          
          if ! git diff --staged --quiet; then
            commit_msg="📊 Enhanced Weekly Comprehensive Benchmarks (Dagger) - $(date -u '+%Y-%m-%d')

            🗓️ Weekly Analysis: $(date -u '+%Y-%m-%d %H:%M UTC')
            🔗 Run ID: ${{ github.run_id }}
            📝 SHA: ${{ github.sha }}
            🚀 Engine: Enhanced Dagger Pipeline v1
            
            📊 Analysis Configuration:
            • Full Analysis: ${{ github.event.inputs.full_analysis || 'true' }}
            • All Configurations: ${{ github.event.inputs.test_all_configs || 'true' }}  
            • Parallel Execution: ${{ github.event.inputs.parallel_execution || 'true' }}
            
            ✨ Enhanced Features Delivered:
            • 🔄 Fresh synthetic test data generation
            • ⚡ Parallel stage execution (matches 498-line legacy workflow)
            • 🏆 Comprehensive competitive analysis across all libraries
            • 🔧 Multi-configuration DataSON optimization testing
            • 📈 Version evolution tracking with historical comparison
            • 📊 Phase 4 enhanced reports with interactive visualizations
            • 📋 Automated result consolidation and summary generation
            • 🌐 GitHub Pages integration with comprehensive updates
            
            🎯 Legacy Parity Achievement:
            This enhanced Dagger implementation provides complete feature parity
            with the 498-line legacy YAML workflow while delivering:
            • Type-safe Python pipeline logic (zero YAML complexity)
            • Local testability for rapid development
            • Enhanced error handling and logging
            • Container-based execution for consistency
            • Improved maintainability and reliability
            
            Generated by Enhanced Dagger Pipeline v1 - Replacing complex YAML with clean Python"
            
            git commit -m "$commit_msg"
            git push
            echo "✅ Enhanced weekly results committed to repository"
          else
            echo "ℹ️ No changes to commit"
          fi

      - name: 📤 Upload comprehensive weekly artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: enhanced-weekly-comprehensive-results-${{ github.run_id }}
          path: |
            data/results/weekly_*.json
            data/results/latest_*.json
            data/results/ci_*_*.json  
            docs/results/weekly_*.html
            docs/results/phase4_comprehensive_*.html
            docs/results/index.html
            weekly_summary.md
          retention-days: 180  # Extended retention for weekly comprehensive results

      - name: ✅ Enhanced weekly benchmarks complete
        run: |
          echo "🎉 Enhanced weekly comprehensive benchmark suite completed successfully!"
          echo ""
          echo "📊 Analysis Summary:"
          echo "  • Full Analysis: ${{ github.event.inputs.full_analysis || 'true' }}"
          echo "  • All Configurations: ${{ github.event.inputs.test_all_configs || 'true' }}"
          echo "  • Parallel Execution: ${{ github.event.inputs.parallel_execution || 'true' }}"
          echo ""
          echo "🚀 Enhanced Features Delivered:"
          echo "  ✅ Fresh synthetic test data generation" 
          echo "  ✅ Parallel stage execution for optimal speed"
          echo "  ✅ Comprehensive competitive analysis"
          echo "  ✅ Multi-configuration DataSON testing"
          echo "  ✅ Version evolution with historical tracking"
          echo "  ✅ Phase 4 enhanced reports with visualizations"
          echo "  ✅ Automated result consolidation"
          echo "  ✅ GitHub Pages comprehensive updates"
          echo ""
          echo "🎯 Legacy Workflow Parity Achieved:"
          echo "  • 498-line YAML workflow → Type-safe Python pipeline"
          echo "  • Complex YAML syntax → Zero syntax complexity"  
          echo "  • Limited local testing → Full local development support"
          echo "  • Fragile error handling → Robust container-based execution"
          echo ""
          echo "🔗 Results: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"